<?php
/**
 * @file
 * Migration 6 to 7 user password preserve hook.
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 */
function migration_6_to_7_keep_user_password_same_help($path, $arg) {
  switch ($path) {
    case "admin/help#migration_6_to_7_keep_user_password_same":
      return '<p>' . t('After Migration from 6 to 7 the users cannot login with the existing password have to reset password the following module will give access to users using the old password.') . '</p>';
      break;
  }
} 

/**
 * Implements hook_permission().
 */
function migration_6_to_7_keep_user_password_same_permission() {
  return array(
    'migration same password' => array(
      'title' => t('Administer permission for Module'),
      'description' => t('To set administer permission for Module'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function migration_6_to_7_keep_user_password_same_menu() {
  $items['admin/config/migration_6_to_7_keep_user_password_same_menu'] = array(
    'title' => 'User Password Migration Enable/Disable',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('migration_6_to_7_keep_user_password_same_form'),
    'access arguments' => array('migration same password'),
    'type' => MENU_NORMAL_ITEM,
  );
 
  return $items;
}

/**
 * Admin form to configurable Password Settings
 */
function migration_6_to_7_keep_user_password_same_form($form, &$form_state) {
  $form['enable_disable_user_old_password'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable/Disable'),
	  '#default_value' => variable_get('enable_disable_user_old_password', 'enable_disable_user_old_password'),
  );
 
  return system_settings_form($form);
}

/**
 * Implements hook_user_login().
 */
function migration_6_to_7_keep_user_password_same_user_authenticate($name, $password) {
  $value = variable_get('enable_disable_user_old_password', '0');
  if($value == 1){
    $uid = FALSE;  
    if (!empty($name) && !empty($password)) {     
      $account = user_load_by_name($name);     
        if ($account) {      
        // Allow alternate password hashing schemes.   
        require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');       if (user_check_password($password, $account)) {      
        // Successful authentication.       
        $uid = $account->uid;         
        // Update user to new password scheme if needed.       
        if (user_needs_new_hash($account)) {      
         user_save($account, array('pass' => $password));         }    
        }    
        // -----Add this Code After Migration from Drupal 6 to Drupal 7 to allow users to login with same password     
        else if($account->pass == md5($password)){ 
        //Check For Drupal 6
        // Successful authentication.      
         $uid = $account->uid;         
        // Update user to new password scheme.         
        user_save($account, array('pass' => $password));       }    
        // -----Add this Code After Migration from Drupal 6 to Drupal 7 to allow users to login with same password   
      }  
    }   
  return $uid; 
    }
}